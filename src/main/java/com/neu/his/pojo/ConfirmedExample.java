package com.neu.his.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ConfirmedExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public ConfirmedExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andConfirmedIdIsNull() {
            addCriterion("confirmed_id is null");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdIsNotNull() {
            addCriterion("confirmed_id is not null");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdEqualTo(Integer value) {
            addCriterion("confirmed_id =", value, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdNotEqualTo(Integer value) {
            addCriterion("confirmed_id <>", value, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdGreaterThan(Integer value) {
            addCriterion("confirmed_id >", value, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("confirmed_id >=", value, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdLessThan(Integer value) {
            addCriterion("confirmed_id <", value, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdLessThanOrEqualTo(Integer value) {
            addCriterion("confirmed_id <=", value, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdIn(List<Integer> values) {
            addCriterion("confirmed_id in", values, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdNotIn(List<Integer> values) {
            addCriterion("confirmed_id not in", values, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdBetween(Integer value1, Integer value2) {
            addCriterion("confirmed_id between", value1, value2, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andConfirmedIdNotBetween(Integer value1, Integer value2) {
            addCriterion("confirmed_id not between", value1, value2, "confirmedId");
            return (Criteria) this;
        }

        public Criteria andRegistIdIsNull() {
            addCriterion("regist_id is null");
            return (Criteria) this;
        }

        public Criteria andRegistIdIsNotNull() {
            addCriterion("regist_id is not null");
            return (Criteria) this;
        }

        public Criteria andRegistIdEqualTo(Integer value) {
            addCriterion("regist_id =", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdNotEqualTo(Integer value) {
            addCriterion("regist_id <>", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdGreaterThan(Integer value) {
            addCriterion("regist_id >", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("regist_id >=", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdLessThan(Integer value) {
            addCriterion("regist_id <", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdLessThanOrEqualTo(Integer value) {
            addCriterion("regist_id <=", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdIn(List<Integer> values) {
            addCriterion("regist_id in", values, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdNotIn(List<Integer> values) {
            addCriterion("regist_id not in", values, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdBetween(Integer value1, Integer value2) {
            addCriterion("regist_id between", value1, value2, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdNotBetween(Integer value1, Integer value2) {
            addCriterion("regist_id not between", value1, value2, "registId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdIsNull() {
            addCriterion("disease_id is null");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdIsNotNull() {
            addCriterion("disease_id is not null");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdEqualTo(Integer value) {
            addCriterion("disease_id =", value, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdNotEqualTo(Integer value) {
            addCriterion("disease_id <>", value, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdGreaterThan(Integer value) {
            addCriterion("disease_id >", value, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("disease_id >=", value, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdLessThan(Integer value) {
            addCriterion("disease_id <", value, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdLessThanOrEqualTo(Integer value) {
            addCriterion("disease_id <=", value, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdIn(List<Integer> values) {
            addCriterion("disease_id in", values, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdNotIn(List<Integer> values) {
            addCriterion("disease_id not in", values, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdBetween(Integer value1, Integer value2) {
            addCriterion("disease_id between", value1, value2, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseIdNotBetween(Integer value1, Integer value2) {
            addCriterion("disease_id not between", value1, value2, "diseaseId");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeIsNull() {
            addCriterion("disease_time is null");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeIsNotNull() {
            addCriterion("disease_time is not null");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeEqualTo(Date value) {
            addCriterion("disease_time =", value, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeNotEqualTo(Date value) {
            addCriterion("disease_time <>", value, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeGreaterThan(Date value) {
            addCriterion("disease_time >", value, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("disease_time >=", value, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeLessThan(Date value) {
            addCriterion("disease_time <", value, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeLessThanOrEqualTo(Date value) {
            addCriterion("disease_time <=", value, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeIn(List<Date> values) {
            addCriterion("disease_time in", values, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeNotIn(List<Date> values) {
            addCriterion("disease_time not in", values, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeBetween(Date value1, Date value2) {
            addCriterion("disease_time between", value1, value2, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andDiseaseTimeNotBetween(Date value1, Date value2) {
            addCriterion("disease_time not between", value1, value2, "diseaseTime");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryIsNull() {
            addCriterion("confirmed_category is null");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryIsNotNull() {
            addCriterion("confirmed_category is not null");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryEqualTo(Byte value) {
            addCriterion("confirmed_category =", value, "confirmedCategory");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryNotEqualTo(Byte value) {
            addCriterion("confirmed_category <>", value, "confirmedCategory");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryGreaterThan(Byte value) {
            addCriterion("confirmed_category >", value, "confirmedCategory");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryGreaterThanOrEqualTo(Byte value) {
            addCriterion("confirmed_category >=", value, "confirmedCategory");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryLessThan(Byte value) {
            addCriterion("confirmed_category <", value, "confirmedCategory");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryLessThanOrEqualTo(Byte value) {
            addCriterion("confirmed_category <=", value, "confirmedCategory");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryIn(List<Byte> values) {
            addCriterion("confirmed_category in", values, "confirmedCategory");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryNotIn(List<Byte> values) {
            addCriterion("confirmed_category not in", values, "confirmedCategory");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryBetween(Byte value1, Byte value2) {
            addCriterion("confirmed_category between", value1, value2, "confirmedCategory");
            return (Criteria) this;
        }

        public Criteria andConfirmedCategoryNotBetween(Byte value1, Byte value2) {
            addCriterion("confirmed_category not between", value1, value2, "confirmedCategory");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table confirmed
     *
     * @mbg.generated do_not_delete_during_merge Thu Sep 05 00:39:57 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table confirmed
     *
     * @mbg.generated Thu Sep 05 00:39:57 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}