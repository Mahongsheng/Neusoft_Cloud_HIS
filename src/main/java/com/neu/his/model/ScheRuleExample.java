package com.neu.his.model;

import java.util.ArrayList;
import java.util.List;

public class ScheRuleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public ScheRuleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andScheruleidIsNull() {
            addCriterion("scheRuleID is null");
            return (Criteria) this;
        }

        public Criteria andScheruleidIsNotNull() {
            addCriterion("scheRuleID is not null");
            return (Criteria) this;
        }

        public Criteria andScheruleidEqualTo(Short value) {
            addCriterion("scheRuleID =", value, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScheruleidNotEqualTo(Short value) {
            addCriterion("scheRuleID <>", value, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScheruleidGreaterThan(Short value) {
            addCriterion("scheRuleID >", value, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScheruleidGreaterThanOrEqualTo(Short value) {
            addCriterion("scheRuleID >=", value, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScheruleidLessThan(Short value) {
            addCriterion("scheRuleID <", value, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScheruleidLessThanOrEqualTo(Short value) {
            addCriterion("scheRuleID <=", value, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScheruleidIn(List<Short> values) {
            addCriterion("scheRuleID in", values, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScheruleidNotIn(List<Short> values) {
            addCriterion("scheRuleID not in", values, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScheruleidBetween(Short value1, Short value2) {
            addCriterion("scheRuleID between", value1, value2, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScheruleidNotBetween(Short value1, Short value2) {
            addCriterion("scheRuleID not between", value1, value2, "scheruleid");
            return (Criteria) this;
        }

        public Criteria andScherulenameIsNull() {
            addCriterion("scheRuleName is null");
            return (Criteria) this;
        }

        public Criteria andScherulenameIsNotNull() {
            addCriterion("scheRuleName is not null");
            return (Criteria) this;
        }

        public Criteria andScherulenameEqualTo(String value) {
            addCriterion("scheRuleName =", value, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameNotEqualTo(String value) {
            addCriterion("scheRuleName <>", value, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameGreaterThan(String value) {
            addCriterion("scheRuleName >", value, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameGreaterThanOrEqualTo(String value) {
            addCriterion("scheRuleName >=", value, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameLessThan(String value) {
            addCriterion("scheRuleName <", value, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameLessThanOrEqualTo(String value) {
            addCriterion("scheRuleName <=", value, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameLike(String value) {
            addCriterion("scheRuleName like", value, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameNotLike(String value) {
            addCriterion("scheRuleName not like", value, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameIn(List<String> values) {
            addCriterion("scheRuleName in", values, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameNotIn(List<String> values) {
            addCriterion("scheRuleName not in", values, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameBetween(String value1, String value2) {
            addCriterion("scheRuleName between", value1, value2, "scherulename");
            return (Criteria) this;
        }

        public Criteria andScherulenameNotBetween(String value1, String value2) {
            addCriterion("scheRuleName not between", value1, value2, "scherulename");
            return (Criteria) this;
        }

        public Criteria andDoctoridIsNull() {
            addCriterion("doctorID is null");
            return (Criteria) this;
        }

        public Criteria andDoctoridIsNotNull() {
            addCriterion("doctorID is not null");
            return (Criteria) this;
        }

        public Criteria andDoctoridEqualTo(Short value) {
            addCriterion("doctorID =", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridNotEqualTo(Short value) {
            addCriterion("doctorID <>", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridGreaterThan(Short value) {
            addCriterion("doctorID >", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridGreaterThanOrEqualTo(Short value) {
            addCriterion("doctorID >=", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridLessThan(Short value) {
            addCriterion("doctorID <", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridLessThanOrEqualTo(Short value) {
            addCriterion("doctorID <=", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridIn(List<Short> values) {
            addCriterion("doctorID in", values, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridNotIn(List<Short> values) {
            addCriterion("doctorID not in", values, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridBetween(Short value1, Short value2) {
            addCriterion("doctorID between", value1, value2, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridNotBetween(Short value1, Short value2) {
            addCriterion("doctorID not between", value1, value2, "doctorid");
            return (Criteria) this;
        }

        public Criteria andScheruledateIsNull() {
            addCriterion("scheRuleDate is null");
            return (Criteria) this;
        }

        public Criteria andScheruledateIsNotNull() {
            addCriterion("scheRuleDate is not null");
            return (Criteria) this;
        }

        public Criteria andScheruledateEqualTo(String value) {
            addCriterion("scheRuleDate =", value, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateNotEqualTo(String value) {
            addCriterion("scheRuleDate <>", value, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateGreaterThan(String value) {
            addCriterion("scheRuleDate >", value, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateGreaterThanOrEqualTo(String value) {
            addCriterion("scheRuleDate >=", value, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateLessThan(String value) {
            addCriterion("scheRuleDate <", value, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateLessThanOrEqualTo(String value) {
            addCriterion("scheRuleDate <=", value, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateLike(String value) {
            addCriterion("scheRuleDate like", value, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateNotLike(String value) {
            addCriterion("scheRuleDate not like", value, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateIn(List<String> values) {
            addCriterion("scheRuleDate in", values, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateNotIn(List<String> values) {
            addCriterion("scheRuleDate not in", values, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateBetween(String value1, String value2) {
            addCriterion("scheRuleDate between", value1, value2, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andScheruledateNotBetween(String value1, String value2) {
            addCriterion("scheRuleDate not between", value1, value2, "scheruledate");
            return (Criteria) this;
        }

        public Criteria andSchedayIsNull() {
            addCriterion("scheDay is null");
            return (Criteria) this;
        }

        public Criteria andSchedayIsNotNull() {
            addCriterion("scheDay is not null");
            return (Criteria) this;
        }

        public Criteria andSchedayEqualTo(Float value) {
            addCriterion("scheDay =", value, "scheday");
            return (Criteria) this;
        }

        public Criteria andSchedayNotEqualTo(Float value) {
            addCriterion("scheDay <>", value, "scheday");
            return (Criteria) this;
        }

        public Criteria andSchedayGreaterThan(Float value) {
            addCriterion("scheDay >", value, "scheday");
            return (Criteria) this;
        }

        public Criteria andSchedayGreaterThanOrEqualTo(Float value) {
            addCriterion("scheDay >=", value, "scheday");
            return (Criteria) this;
        }

        public Criteria andSchedayLessThan(Float value) {
            addCriterion("scheDay <", value, "scheday");
            return (Criteria) this;
        }

        public Criteria andSchedayLessThanOrEqualTo(Float value) {
            addCriterion("scheDay <=", value, "scheday");
            return (Criteria) this;
        }

        public Criteria andSchedayIn(List<Float> values) {
            addCriterion("scheDay in", values, "scheday");
            return (Criteria) this;
        }

        public Criteria andSchedayNotIn(List<Float> values) {
            addCriterion("scheDay not in", values, "scheday");
            return (Criteria) this;
        }

        public Criteria andSchedayBetween(Float value1, Float value2) {
            addCriterion("scheDay between", value1, value2, "scheday");
            return (Criteria) this;
        }

        public Criteria andSchedayNotBetween(Float value1, Float value2) {
            addCriterion("scheDay not between", value1, value2, "scheday");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sche_rule
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 22 15:20:08 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sche_rule
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}