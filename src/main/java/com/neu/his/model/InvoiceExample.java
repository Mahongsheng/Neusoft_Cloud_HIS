package com.neu.his.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class InvoiceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public InvoiceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andInvoiceidIsNull() {
            addCriterion("invoiceID is null");
            return (Criteria) this;
        }

        public Criteria andInvoiceidIsNotNull() {
            addCriterion("invoiceID is not null");
            return (Criteria) this;
        }

        public Criteria andInvoiceidEqualTo(Integer value) {
            addCriterion("invoiceID =", value, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoiceidNotEqualTo(Integer value) {
            addCriterion("invoiceID <>", value, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoiceidGreaterThan(Integer value) {
            addCriterion("invoiceID >", value, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoiceidGreaterThanOrEqualTo(Integer value) {
            addCriterion("invoiceID >=", value, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoiceidLessThan(Integer value) {
            addCriterion("invoiceID <", value, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoiceidLessThanOrEqualTo(Integer value) {
            addCriterion("invoiceID <=", value, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoiceidIn(List<Integer> values) {
            addCriterion("invoiceID in", values, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoiceidNotIn(List<Integer> values) {
            addCriterion("invoiceID not in", values, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoiceidBetween(Integer value1, Integer value2) {
            addCriterion("invoiceID between", value1, value2, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoiceidNotBetween(Integer value1, Integer value2) {
            addCriterion("invoiceID not between", value1, value2, "invoiceid");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceIsNull() {
            addCriterion("invoicePrice is null");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceIsNotNull() {
            addCriterion("invoicePrice is not null");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceEqualTo(Float value) {
            addCriterion("invoicePrice =", value, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceNotEqualTo(Float value) {
            addCriterion("invoicePrice <>", value, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceGreaterThan(Float value) {
            addCriterion("invoicePrice >", value, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceGreaterThanOrEqualTo(Float value) {
            addCriterion("invoicePrice >=", value, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceLessThan(Float value) {
            addCriterion("invoicePrice <", value, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceLessThanOrEqualTo(Float value) {
            addCriterion("invoicePrice <=", value, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceIn(List<Float> values) {
            addCriterion("invoicePrice in", values, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceNotIn(List<Float> values) {
            addCriterion("invoicePrice not in", values, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceBetween(Float value1, Float value2) {
            addCriterion("invoicePrice between", value1, value2, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicepriceNotBetween(Float value1, Float value2) {
            addCriterion("invoicePrice not between", value1, value2, "invoiceprice");
            return (Criteria) this;
        }

        public Criteria andInvoicestateIsNull() {
            addCriterion("invoiceState is null");
            return (Criteria) this;
        }

        public Criteria andInvoicestateIsNotNull() {
            addCriterion("invoiceState is not null");
            return (Criteria) this;
        }

        public Criteria andInvoicestateEqualTo(Boolean value) {
            addCriterion("invoiceState =", value, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoicestateNotEqualTo(Boolean value) {
            addCriterion("invoiceState <>", value, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoicestateGreaterThan(Boolean value) {
            addCriterion("invoiceState >", value, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoicestateGreaterThanOrEqualTo(Boolean value) {
            addCriterion("invoiceState >=", value, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoicestateLessThan(Boolean value) {
            addCriterion("invoiceState <", value, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoicestateLessThanOrEqualTo(Boolean value) {
            addCriterion("invoiceState <=", value, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoicestateIn(List<Boolean> values) {
            addCriterion("invoiceState in", values, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoicestateNotIn(List<Boolean> values) {
            addCriterion("invoiceState not in", values, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoicestateBetween(Boolean value1, Boolean value2) {
            addCriterion("invoiceState between", value1, value2, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoicestateNotBetween(Boolean value1, Boolean value2) {
            addCriterion("invoiceState not between", value1, value2, "invoicestate");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeIsNull() {
            addCriterion("invoiceOperaTime is null");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeIsNotNull() {
            addCriterion("invoiceOperaTime is not null");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeEqualTo(Date value) {
            addCriterion("invoiceOperaTime =", value, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeNotEqualTo(Date value) {
            addCriterion("invoiceOperaTime <>", value, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeGreaterThan(Date value) {
            addCriterion("invoiceOperaTime >", value, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeGreaterThanOrEqualTo(Date value) {
            addCriterion("invoiceOperaTime >=", value, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeLessThan(Date value) {
            addCriterion("invoiceOperaTime <", value, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeLessThanOrEqualTo(Date value) {
            addCriterion("invoiceOperaTime <=", value, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeIn(List<Date> values) {
            addCriterion("invoiceOperaTime in", values, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeNotIn(List<Date> values) {
            addCriterion("invoiceOperaTime not in", values, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeBetween(Date value1, Date value2) {
            addCriterion("invoiceOperaTime between", value1, value2, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andInvoiceoperatimeNotBetween(Date value1, Date value2) {
            addCriterion("invoiceOperaTime not between", value1, value2, "invoiceoperatime");
            return (Criteria) this;
        }

        public Criteria andChargeuseridIsNull() {
            addCriterion("chargeUserID is null");
            return (Criteria) this;
        }

        public Criteria andChargeuseridIsNotNull() {
            addCriterion("chargeUserID is not null");
            return (Criteria) this;
        }

        public Criteria andChargeuseridEqualTo(Short value) {
            addCriterion("chargeUserID =", value, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andChargeuseridNotEqualTo(Short value) {
            addCriterion("chargeUserID <>", value, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andChargeuseridGreaterThan(Short value) {
            addCriterion("chargeUserID >", value, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andChargeuseridGreaterThanOrEqualTo(Short value) {
            addCriterion("chargeUserID >=", value, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andChargeuseridLessThan(Short value) {
            addCriterion("chargeUserID <", value, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andChargeuseridLessThanOrEqualTo(Short value) {
            addCriterion("chargeUserID <=", value, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andChargeuseridIn(List<Short> values) {
            addCriterion("chargeUserID in", values, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andChargeuseridNotIn(List<Short> values) {
            addCriterion("chargeUserID not in", values, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andChargeuseridBetween(Short value1, Short value2) {
            addCriterion("chargeUserID between", value1, value2, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andChargeuseridNotBetween(Short value1, Short value2) {
            addCriterion("chargeUserID not between", value1, value2, "chargeuserid");
            return (Criteria) this;
        }

        public Criteria andRegistidIsNull() {
            addCriterion("registID is null");
            return (Criteria) this;
        }

        public Criteria andRegistidIsNotNull() {
            addCriterion("registID is not null");
            return (Criteria) this;
        }

        public Criteria andRegistidEqualTo(Integer value) {
            addCriterion("registID =", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidNotEqualTo(Integer value) {
            addCriterion("registID <>", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidGreaterThan(Integer value) {
            addCriterion("registID >", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidGreaterThanOrEqualTo(Integer value) {
            addCriterion("registID >=", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidLessThan(Integer value) {
            addCriterion("registID <", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidLessThanOrEqualTo(Integer value) {
            addCriterion("registID <=", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidIn(List<Integer> values) {
            addCriterion("registID in", values, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidNotIn(List<Integer> values) {
            addCriterion("registID not in", values, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidBetween(Integer value1, Integer value2) {
            addCriterion("registID between", value1, value2, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidNotBetween(Integer value1, Integer value2) {
            addCriterion("registID not between", value1, value2, "registid");
            return (Criteria) this;
        }

        public Criteria andChargetypeIsNull() {
            addCriterion("chargeType is null");
            return (Criteria) this;
        }

        public Criteria andChargetypeIsNotNull() {
            addCriterion("chargeType is not null");
            return (Criteria) this;
        }

        public Criteria andChargetypeEqualTo(Boolean value) {
            addCriterion("chargeType =", value, "chargetype");
            return (Criteria) this;
        }

        public Criteria andChargetypeNotEqualTo(Boolean value) {
            addCriterion("chargeType <>", value, "chargetype");
            return (Criteria) this;
        }

        public Criteria andChargetypeGreaterThan(Boolean value) {
            addCriterion("chargeType >", value, "chargetype");
            return (Criteria) this;
        }

        public Criteria andChargetypeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("chargeType >=", value, "chargetype");
            return (Criteria) this;
        }

        public Criteria andChargetypeLessThan(Boolean value) {
            addCriterion("chargeType <", value, "chargetype");
            return (Criteria) this;
        }

        public Criteria andChargetypeLessThanOrEqualTo(Boolean value) {
            addCriterion("chargeType <=", value, "chargetype");
            return (Criteria) this;
        }

        public Criteria andChargetypeIn(List<Boolean> values) {
            addCriterion("chargeType in", values, "chargetype");
            return (Criteria) this;
        }

        public Criteria andChargetypeNotIn(List<Boolean> values) {
            addCriterion("chargeType not in", values, "chargetype");
            return (Criteria) this;
        }

        public Criteria andChargetypeBetween(Boolean value1, Boolean value2) {
            addCriterion("chargeType between", value1, value2, "chargetype");
            return (Criteria) this;
        }

        public Criteria andChargetypeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("chargeType not between", value1, value2, "chargetype");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidIsNull() {
            addCriterion("invoiceRedID is null");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidIsNotNull() {
            addCriterion("invoiceRedID is not null");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidEqualTo(Integer value) {
            addCriterion("invoiceRedID =", value, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidNotEqualTo(Integer value) {
            addCriterion("invoiceRedID <>", value, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidGreaterThan(Integer value) {
            addCriterion("invoiceRedID >", value, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidGreaterThanOrEqualTo(Integer value) {
            addCriterion("invoiceRedID >=", value, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidLessThan(Integer value) {
            addCriterion("invoiceRedID <", value, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidLessThanOrEqualTo(Integer value) {
            addCriterion("invoiceRedID <=", value, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidIn(List<Integer> values) {
            addCriterion("invoiceRedID in", values, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidNotIn(List<Integer> values) {
            addCriterion("invoiceRedID not in", values, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidBetween(Integer value1, Integer value2) {
            addCriterion("invoiceRedID between", value1, value2, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoiceredidNotBetween(Integer value1, Integer value2) {
            addCriterion("invoiceRedID not between", value1, value2, "invoiceredid");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateIsNull() {
            addCriterion("invoiceSettleState is null");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateIsNotNull() {
            addCriterion("invoiceSettleState is not null");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateEqualTo(Boolean value) {
            addCriterion("invoiceSettleState =", value, "invoicesettlestate");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateNotEqualTo(Boolean value) {
            addCriterion("invoiceSettleState <>", value, "invoicesettlestate");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateGreaterThan(Boolean value) {
            addCriterion("invoiceSettleState >", value, "invoicesettlestate");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateGreaterThanOrEqualTo(Boolean value) {
            addCriterion("invoiceSettleState >=", value, "invoicesettlestate");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateLessThan(Boolean value) {
            addCriterion("invoiceSettleState <", value, "invoicesettlestate");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateLessThanOrEqualTo(Boolean value) {
            addCriterion("invoiceSettleState <=", value, "invoicesettlestate");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateIn(List<Boolean> values) {
            addCriterion("invoiceSettleState in", values, "invoicesettlestate");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateNotIn(List<Boolean> values) {
            addCriterion("invoiceSettleState not in", values, "invoicesettlestate");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateBetween(Boolean value1, Boolean value2) {
            addCriterion("invoiceSettleState between", value1, value2, "invoicesettlestate");
            return (Criteria) this;
        }

        public Criteria andInvoicesettlestateNotBetween(Boolean value1, Boolean value2) {
            addCriterion("invoiceSettleState not between", value1, value2, "invoicesettlestate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table invoice
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 22 15:20:08 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table invoice
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}