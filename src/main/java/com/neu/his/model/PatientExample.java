package com.neu.his.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PatientExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public PatientExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andPatientrecordidIsNull() {
            addCriterion("patientRecordID is null");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidIsNotNull() {
            addCriterion("patientRecordID is not null");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidEqualTo(Integer value) {
            addCriterion("patientRecordID =", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidNotEqualTo(Integer value) {
            addCriterion("patientRecordID <>", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidGreaterThan(Integer value) {
            addCriterion("patientRecordID >", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidGreaterThanOrEqualTo(Integer value) {
            addCriterion("patientRecordID >=", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidLessThan(Integer value) {
            addCriterion("patientRecordID <", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidLessThanOrEqualTo(Integer value) {
            addCriterion("patientRecordID <=", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidIn(List<Integer> values) {
            addCriterion("patientRecordID in", values, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidNotIn(List<Integer> values) {
            addCriterion("patientRecordID not in", values, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidBetween(Integer value1, Integer value2) {
            addCriterion("patientRecordID between", value1, value2, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidNotBetween(Integer value1, Integer value2) {
            addCriterion("patientRecordID not between", value1, value2, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientnameIsNull() {
            addCriterion("patientName is null");
            return (Criteria) this;
        }

        public Criteria andPatientnameIsNotNull() {
            addCriterion("patientName is not null");
            return (Criteria) this;
        }

        public Criteria andPatientnameEqualTo(String value) {
            addCriterion("patientName =", value, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameNotEqualTo(String value) {
            addCriterion("patientName <>", value, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameGreaterThan(String value) {
            addCriterion("patientName >", value, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameGreaterThanOrEqualTo(String value) {
            addCriterion("patientName >=", value, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameLessThan(String value) {
            addCriterion("patientName <", value, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameLessThanOrEqualTo(String value) {
            addCriterion("patientName <=", value, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameLike(String value) {
            addCriterion("patientName like", value, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameNotLike(String value) {
            addCriterion("patientName not like", value, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameIn(List<String> values) {
            addCriterion("patientName in", values, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameNotIn(List<String> values) {
            addCriterion("patientName not in", values, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameBetween(String value1, String value2) {
            addCriterion("patientName between", value1, value2, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientnameNotBetween(String value1, String value2) {
            addCriterion("patientName not between", value1, value2, "patientname");
            return (Criteria) this;
        }

        public Criteria andPatientgenderIsNull() {
            addCriterion("patientGender is null");
            return (Criteria) this;
        }

        public Criteria andPatientgenderIsNotNull() {
            addCriterion("patientGender is not null");
            return (Criteria) this;
        }

        public Criteria andPatientgenderEqualTo(Byte value) {
            addCriterion("patientGender =", value, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientgenderNotEqualTo(Byte value) {
            addCriterion("patientGender <>", value, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientgenderGreaterThan(Byte value) {
            addCriterion("patientGender >", value, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientgenderGreaterThanOrEqualTo(Byte value) {
            addCriterion("patientGender >=", value, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientgenderLessThan(Byte value) {
            addCriterion("patientGender <", value, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientgenderLessThanOrEqualTo(Byte value) {
            addCriterion("patientGender <=", value, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientgenderIn(List<Byte> values) {
            addCriterion("patientGender in", values, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientgenderNotIn(List<Byte> values) {
            addCriterion("patientGender not in", values, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientgenderBetween(Byte value1, Byte value2) {
            addCriterion("patientGender between", value1, value2, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientgenderNotBetween(Byte value1, Byte value2) {
            addCriterion("patientGender not between", value1, value2, "patientgender");
            return (Criteria) this;
        }

        public Criteria andPatientageIsNull() {
            addCriterion("patientAge is null");
            return (Criteria) this;
        }

        public Criteria andPatientageIsNotNull() {
            addCriterion("patientAge is not null");
            return (Criteria) this;
        }

        public Criteria andPatientageEqualTo(Byte value) {
            addCriterion("patientAge =", value, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientageNotEqualTo(Byte value) {
            addCriterion("patientAge <>", value, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientageGreaterThan(Byte value) {
            addCriterion("patientAge >", value, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientageGreaterThanOrEqualTo(Byte value) {
            addCriterion("patientAge >=", value, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientageLessThan(Byte value) {
            addCriterion("patientAge <", value, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientageLessThanOrEqualTo(Byte value) {
            addCriterion("patientAge <=", value, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientageIn(List<Byte> values) {
            addCriterion("patientAge in", values, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientageNotIn(List<Byte> values) {
            addCriterion("patientAge not in", values, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientageBetween(Byte value1, Byte value2) {
            addCriterion("patientAge between", value1, value2, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientageNotBetween(Byte value1, Byte value2) {
            addCriterion("patientAge not between", value1, value2, "patientage");
            return (Criteria) this;
        }

        public Criteria andPatientidnumIsNull() {
            addCriterion("patientIDNum is null");
            return (Criteria) this;
        }

        public Criteria andPatientidnumIsNotNull() {
            addCriterion("patientIDNum is not null");
            return (Criteria) this;
        }

        public Criteria andPatientidnumEqualTo(String value) {
            addCriterion("patientIDNum =", value, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumNotEqualTo(String value) {
            addCriterion("patientIDNum <>", value, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumGreaterThan(String value) {
            addCriterion("patientIDNum >", value, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumGreaterThanOrEqualTo(String value) {
            addCriterion("patientIDNum >=", value, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumLessThan(String value) {
            addCriterion("patientIDNum <", value, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumLessThanOrEqualTo(String value) {
            addCriterion("patientIDNum <=", value, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumLike(String value) {
            addCriterion("patientIDNum like", value, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumNotLike(String value) {
            addCriterion("patientIDNum not like", value, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumIn(List<String> values) {
            addCriterion("patientIDNum in", values, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumNotIn(List<String> values) {
            addCriterion("patientIDNum not in", values, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumBetween(String value1, String value2) {
            addCriterion("patientIDNum between", value1, value2, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientidnumNotBetween(String value1, String value2) {
            addCriterion("patientIDNum not between", value1, value2, "patientidnum");
            return (Criteria) this;
        }

        public Criteria andPatientaddressIsNull() {
            addCriterion("patientAddress is null");
            return (Criteria) this;
        }

        public Criteria andPatientaddressIsNotNull() {
            addCriterion("patientAddress is not null");
            return (Criteria) this;
        }

        public Criteria andPatientaddressEqualTo(String value) {
            addCriterion("patientAddress =", value, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressNotEqualTo(String value) {
            addCriterion("patientAddress <>", value, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressGreaterThan(String value) {
            addCriterion("patientAddress >", value, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressGreaterThanOrEqualTo(String value) {
            addCriterion("patientAddress >=", value, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressLessThan(String value) {
            addCriterion("patientAddress <", value, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressLessThanOrEqualTo(String value) {
            addCriterion("patientAddress <=", value, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressLike(String value) {
            addCriterion("patientAddress like", value, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressNotLike(String value) {
            addCriterion("patientAddress not like", value, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressIn(List<String> values) {
            addCriterion("patientAddress in", values, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressNotIn(List<String> values) {
            addCriterion("patientAddress not in", values, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressBetween(String value1, String value2) {
            addCriterion("patientAddress between", value1, value2, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientaddressNotBetween(String value1, String value2) {
            addCriterion("patientAddress not between", value1, value2, "patientaddress");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeIsNull() {
            addCriterion("patientAgeType is null");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeIsNotNull() {
            addCriterion("patientAgeType is not null");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeEqualTo(String value) {
            addCriterion("patientAgeType =", value, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeNotEqualTo(String value) {
            addCriterion("patientAgeType <>", value, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeGreaterThan(String value) {
            addCriterion("patientAgeType >", value, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeGreaterThanOrEqualTo(String value) {
            addCriterion("patientAgeType >=", value, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeLessThan(String value) {
            addCriterion("patientAgeType <", value, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeLessThanOrEqualTo(String value) {
            addCriterion("patientAgeType <=", value, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeLike(String value) {
            addCriterion("patientAgeType like", value, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeNotLike(String value) {
            addCriterion("patientAgeType not like", value, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeIn(List<String> values) {
            addCriterion("patientAgeType in", values, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeNotIn(List<String> values) {
            addCriterion("patientAgeType not in", values, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeBetween(String value1, String value2) {
            addCriterion("patientAgeType between", value1, value2, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientagetypeNotBetween(String value1, String value2) {
            addCriterion("patientAgeType not between", value1, value2, "patientagetype");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayIsNull() {
            addCriterion("patientBirthday is null");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayIsNotNull() {
            addCriterion("patientBirthday is not null");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayEqualTo(Date value) {
            addCriterionForJDBCDate("patientBirthday =", value, "patientbirthday");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayNotEqualTo(Date value) {
            addCriterionForJDBCDate("patientBirthday <>", value, "patientbirthday");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayGreaterThan(Date value) {
            addCriterionForJDBCDate("patientBirthday >", value, "patientbirthday");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("patientBirthday >=", value, "patientbirthday");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayLessThan(Date value) {
            addCriterionForJDBCDate("patientBirthday <", value, "patientbirthday");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("patientBirthday <=", value, "patientbirthday");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayIn(List<Date> values) {
            addCriterionForJDBCDate("patientBirthday in", values, "patientbirthday");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayNotIn(List<Date> values) {
            addCriterionForJDBCDate("patientBirthday not in", values, "patientbirthday");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("patientBirthday between", value1, value2, "patientbirthday");
            return (Criteria) this;
        }

        public Criteria andPatientbirthdayNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("patientBirthday not between", value1, value2, "patientbirthday");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 22 15:20:08 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table patient
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}