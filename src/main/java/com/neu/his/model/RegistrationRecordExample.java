package com.neu.his.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RegistrationRecordExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public RegistrationRecordExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andRegistidIsNull() {
            addCriterion("registID is null");
            return (Criteria) this;
        }

        public Criteria andRegistidIsNotNull() {
            addCriterion("registID is not null");
            return (Criteria) this;
        }

        public Criteria andRegistidEqualTo(Integer value) {
            addCriterion("registID =", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidNotEqualTo(Integer value) {
            addCriterion("registID <>", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidGreaterThan(Integer value) {
            addCriterion("registID >", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidGreaterThanOrEqualTo(Integer value) {
            addCriterion("registID >=", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidLessThan(Integer value) {
            addCriterion("registID <", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidLessThanOrEqualTo(Integer value) {
            addCriterion("registID <=", value, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidIn(List<Integer> values) {
            addCriterion("registID in", values, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidNotIn(List<Integer> values) {
            addCriterion("registID not in", values, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidBetween(Integer value1, Integer value2) {
            addCriterion("registID between", value1, value2, "registid");
            return (Criteria) this;
        }

        public Criteria andRegistidNotBetween(Integer value1, Integer value2) {
            addCriterion("registID not between", value1, value2, "registid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidIsNull() {
            addCriterion("patientRecordID is null");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidIsNotNull() {
            addCriterion("patientRecordID is not null");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidEqualTo(Integer value) {
            addCriterion("patientRecordID =", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidNotEqualTo(Integer value) {
            addCriterion("patientRecordID <>", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidGreaterThan(Integer value) {
            addCriterion("patientRecordID >", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidGreaterThanOrEqualTo(Integer value) {
            addCriterion("patientRecordID >=", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidLessThan(Integer value) {
            addCriterion("patientRecordID <", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidLessThanOrEqualTo(Integer value) {
            addCriterion("patientRecordID <=", value, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidIn(List<Integer> values) {
            addCriterion("patientRecordID in", values, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidNotIn(List<Integer> values) {
            addCriterion("patientRecordID not in", values, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidBetween(Integer value1, Integer value2) {
            addCriterion("patientRecordID between", value1, value2, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andPatientrecordidNotBetween(Integer value1, Integer value2) {
            addCriterion("patientRecordID not between", value1, value2, "patientrecordid");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryIsNull() {
            addCriterion("registChargeCategory is null");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryIsNotNull() {
            addCriterion("registChargeCategory is not null");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryEqualTo(Boolean value) {
            addCriterion("registChargeCategory =", value, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryNotEqualTo(Boolean value) {
            addCriterion("registChargeCategory <>", value, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryGreaterThan(Boolean value) {
            addCriterion("registChargeCategory >", value, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryGreaterThanOrEqualTo(Boolean value) {
            addCriterion("registChargeCategory >=", value, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryLessThan(Boolean value) {
            addCriterion("registChargeCategory <", value, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryLessThanOrEqualTo(Boolean value) {
            addCriterion("registChargeCategory <=", value, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryIn(List<Boolean> values) {
            addCriterion("registChargeCategory in", values, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryNotIn(List<Boolean> values) {
            addCriterion("registChargeCategory not in", values, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryBetween(Boolean value1, Boolean value2) {
            addCriterion("registChargeCategory between", value1, value2, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistchargecategoryNotBetween(Boolean value1, Boolean value2) {
            addCriterion("registChargeCategory not between", value1, value2, "registchargecategory");
            return (Criteria) this;
        }

        public Criteria andRegistlevelIsNull() {
            addCriterion("registLevel is null");
            return (Criteria) this;
        }

        public Criteria andRegistlevelIsNotNull() {
            addCriterion("registLevel is not null");
            return (Criteria) this;
        }

        public Criteria andRegistlevelEqualTo(Boolean value) {
            addCriterion("registLevel =", value, "registlevel");
            return (Criteria) this;
        }

        public Criteria andRegistlevelNotEqualTo(Boolean value) {
            addCriterion("registLevel <>", value, "registlevel");
            return (Criteria) this;
        }

        public Criteria andRegistlevelGreaterThan(Boolean value) {
            addCriterion("registLevel >", value, "registlevel");
            return (Criteria) this;
        }

        public Criteria andRegistlevelGreaterThanOrEqualTo(Boolean value) {
            addCriterion("registLevel >=", value, "registlevel");
            return (Criteria) this;
        }

        public Criteria andRegistlevelLessThan(Boolean value) {
            addCriterion("registLevel <", value, "registlevel");
            return (Criteria) this;
        }

        public Criteria andRegistlevelLessThanOrEqualTo(Boolean value) {
            addCriterion("registLevel <=", value, "registlevel");
            return (Criteria) this;
        }

        public Criteria andRegistlevelIn(List<Boolean> values) {
            addCriterion("registLevel in", values, "registlevel");
            return (Criteria) this;
        }

        public Criteria andRegistlevelNotIn(List<Boolean> values) {
            addCriterion("registLevel not in", values, "registlevel");
            return (Criteria) this;
        }

        public Criteria andRegistlevelBetween(Boolean value1, Boolean value2) {
            addCriterion("registLevel between", value1, value2, "registlevel");
            return (Criteria) this;
        }

        public Criteria andRegistlevelNotBetween(Boolean value1, Boolean value2) {
            addCriterion("registLevel not between", value1, value2, "registlevel");
            return (Criteria) this;
        }

        public Criteria andDoctoridIsNull() {
            addCriterion("doctorID is null");
            return (Criteria) this;
        }

        public Criteria andDoctoridIsNotNull() {
            addCriterion("doctorID is not null");
            return (Criteria) this;
        }

        public Criteria andDoctoridEqualTo(Short value) {
            addCriterion("doctorID =", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridNotEqualTo(Short value) {
            addCriterion("doctorID <>", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridGreaterThan(Short value) {
            addCriterion("doctorID >", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridGreaterThanOrEqualTo(Short value) {
            addCriterion("doctorID >=", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridLessThan(Short value) {
            addCriterion("doctorID <", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridLessThanOrEqualTo(Short value) {
            addCriterion("doctorID <=", value, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridIn(List<Short> values) {
            addCriterion("doctorID in", values, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridNotIn(List<Short> values) {
            addCriterion("doctorID not in", values, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridBetween(Short value1, Short value2) {
            addCriterion("doctorID between", value1, value2, "doctorid");
            return (Criteria) this;
        }

        public Criteria andDoctoridNotBetween(Short value1, Short value2) {
            addCriterion("doctorID not between", value1, value2, "doctorid");
            return (Criteria) this;
        }

        public Criteria andRegistbookIsNull() {
            addCriterion("registBook is null");
            return (Criteria) this;
        }

        public Criteria andRegistbookIsNotNull() {
            addCriterion("registBook is not null");
            return (Criteria) this;
        }

        public Criteria andRegistbookEqualTo(Boolean value) {
            addCriterion("registBook =", value, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegistbookNotEqualTo(Boolean value) {
            addCriterion("registBook <>", value, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegistbookGreaterThan(Boolean value) {
            addCriterion("registBook >", value, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegistbookGreaterThanOrEqualTo(Boolean value) {
            addCriterion("registBook >=", value, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegistbookLessThan(Boolean value) {
            addCriterion("registBook <", value, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegistbookLessThanOrEqualTo(Boolean value) {
            addCriterion("registBook <=", value, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegistbookIn(List<Boolean> values) {
            addCriterion("registBook in", values, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegistbookNotIn(List<Boolean> values) {
            addCriterion("registBook not in", values, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegistbookBetween(Boolean value1, Boolean value2) {
            addCriterion("registBook between", value1, value2, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegistbookNotBetween(Boolean value1, Boolean value2) {
            addCriterion("registBook not between", value1, value2, "registbook");
            return (Criteria) this;
        }

        public Criteria andRegiststateIsNull() {
            addCriterion("registState is null");
            return (Criteria) this;
        }

        public Criteria andRegiststateIsNotNull() {
            addCriterion("registState is not null");
            return (Criteria) this;
        }

        public Criteria andRegiststateEqualTo(String value) {
            addCriterion("registState =", value, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateNotEqualTo(String value) {
            addCriterion("registState <>", value, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateGreaterThan(String value) {
            addCriterion("registState >", value, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateGreaterThanOrEqualTo(String value) {
            addCriterion("registState >=", value, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateLessThan(String value) {
            addCriterion("registState <", value, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateLessThanOrEqualTo(String value) {
            addCriterion("registState <=", value, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateLike(String value) {
            addCriterion("registState like", value, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateNotLike(String value) {
            addCriterion("registState not like", value, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateIn(List<String> values) {
            addCriterion("registState in", values, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateNotIn(List<String> values) {
            addCriterion("registState not in", values, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateBetween(String value1, String value2) {
            addCriterion("registState between", value1, value2, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegiststateNotBetween(String value1, String value2) {
            addCriterion("registState not between", value1, value2, "registstate");
            return (Criteria) this;
        }

        public Criteria andRegisttimeIsNull() {
            addCriterion("registTime is null");
            return (Criteria) this;
        }

        public Criteria andRegisttimeIsNotNull() {
            addCriterion("registTime is not null");
            return (Criteria) this;
        }

        public Criteria andRegisttimeEqualTo(Date value) {
            addCriterion("registTime =", value, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegisttimeNotEqualTo(Date value) {
            addCriterion("registTime <>", value, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegisttimeGreaterThan(Date value) {
            addCriterion("registTime >", value, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegisttimeGreaterThanOrEqualTo(Date value) {
            addCriterion("registTime >=", value, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegisttimeLessThan(Date value) {
            addCriterion("registTime <", value, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegisttimeLessThanOrEqualTo(Date value) {
            addCriterion("registTime <=", value, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegisttimeIn(List<Date> values) {
            addCriterion("registTime in", values, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegisttimeNotIn(List<Date> values) {
            addCriterion("registTime not in", values, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegisttimeBetween(Date value1, Date value2) {
            addCriterion("registTime between", value1, value2, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegisttimeNotBetween(Date value1, Date value2) {
            addCriterion("registTime not between", value1, value2, "registtime");
            return (Criteria) this;
        }

        public Criteria andRegistuseridIsNull() {
            addCriterion("registUserID is null");
            return (Criteria) this;
        }

        public Criteria andRegistuseridIsNotNull() {
            addCriterion("registUserID is not null");
            return (Criteria) this;
        }

        public Criteria andRegistuseridEqualTo(Short value) {
            addCriterion("registUserID =", value, "registuserid");
            return (Criteria) this;
        }

        public Criteria andRegistuseridNotEqualTo(Short value) {
            addCriterion("registUserID <>", value, "registuserid");
            return (Criteria) this;
        }

        public Criteria andRegistuseridGreaterThan(Short value) {
            addCriterion("registUserID >", value, "registuserid");
            return (Criteria) this;
        }

        public Criteria andRegistuseridGreaterThanOrEqualTo(Short value) {
            addCriterion("registUserID >=", value, "registuserid");
            return (Criteria) this;
        }

        public Criteria andRegistuseridLessThan(Short value) {
            addCriterion("registUserID <", value, "registuserid");
            return (Criteria) this;
        }

        public Criteria andRegistuseridLessThanOrEqualTo(Short value) {
            addCriterion("registUserID <=", value, "registuserid");
            return (Criteria) this;
        }

        public Criteria andRegistuseridIn(List<Short> values) {
            addCriterion("registUserID in", values, "registuserid");
            return (Criteria) this;
        }

        public Criteria andRegistuseridNotIn(List<Short> values) {
            addCriterion("registUserID not in", values, "registuserid");
            return (Criteria) this;
        }

        public Criteria andRegistuseridBetween(Short value1, Short value2) {
            addCriterion("registUserID between", value1, value2, "registuserid");
            return (Criteria) this;
        }

        public Criteria andRegistuseridNotBetween(Short value1, Short value2) {
            addCriterion("registUserID not between", value1, value2, "registuserid");
            return (Criteria) this;
        }

        public Criteria andDeptidIsNull() {
            addCriterion("deptID is null");
            return (Criteria) this;
        }

        public Criteria andDeptidIsNotNull() {
            addCriterion("deptID is not null");
            return (Criteria) this;
        }

        public Criteria andDeptidEqualTo(Short value) {
            addCriterion("deptID =", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidNotEqualTo(Short value) {
            addCriterion("deptID <>", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidGreaterThan(Short value) {
            addCriterion("deptID >", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidGreaterThanOrEqualTo(Short value) {
            addCriterion("deptID >=", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidLessThan(Short value) {
            addCriterion("deptID <", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidLessThanOrEqualTo(Short value) {
            addCriterion("deptID <=", value, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidIn(List<Short> values) {
            addCriterion("deptID in", values, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidNotIn(List<Short> values) {
            addCriterion("deptID not in", values, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidBetween(Short value1, Short value2) {
            addCriterion("deptID between", value1, value2, "deptid");
            return (Criteria) this;
        }

        public Criteria andDeptidNotBetween(Short value1, Short value2) {
            addCriterion("deptID not between", value1, value2, "deptid");
            return (Criteria) this;
        }

        public Criteria andRegistnoonIsNull() {
            addCriterion("registNoon is null");
            return (Criteria) this;
        }

        public Criteria andRegistnoonIsNotNull() {
            addCriterion("registNoon is not null");
            return (Criteria) this;
        }

        public Criteria andRegistnoonEqualTo(String value) {
            addCriterion("registNoon =", value, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonNotEqualTo(String value) {
            addCriterion("registNoon <>", value, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonGreaterThan(String value) {
            addCriterion("registNoon >", value, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonGreaterThanOrEqualTo(String value) {
            addCriterion("registNoon >=", value, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonLessThan(String value) {
            addCriterion("registNoon <", value, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonLessThanOrEqualTo(String value) {
            addCriterion("registNoon <=", value, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonLike(String value) {
            addCriterion("registNoon like", value, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonNotLike(String value) {
            addCriterion("registNoon not like", value, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonIn(List<String> values) {
            addCriterion("registNoon in", values, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonNotIn(List<String> values) {
            addCriterion("registNoon not in", values, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonBetween(String value1, String value2) {
            addCriterion("registNoon between", value1, value2, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistnoonNotBetween(String value1, String value2) {
            addCriterion("registNoon not between", value1, value2, "registnoon");
            return (Criteria) this;
        }

        public Criteria andRegistdateIsNull() {
            addCriterion("registDate is null");
            return (Criteria) this;
        }

        public Criteria andRegistdateIsNotNull() {
            addCriterion("registDate is not null");
            return (Criteria) this;
        }

        public Criteria andRegistdateEqualTo(Date value) {
            addCriterionForJDBCDate("registDate =", value, "registdate");
            return (Criteria) this;
        }

        public Criteria andRegistdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("registDate <>", value, "registdate");
            return (Criteria) this;
        }

        public Criteria andRegistdateGreaterThan(Date value) {
            addCriterionForJDBCDate("registDate >", value, "registdate");
            return (Criteria) this;
        }

        public Criteria andRegistdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("registDate >=", value, "registdate");
            return (Criteria) this;
        }

        public Criteria andRegistdateLessThan(Date value) {
            addCriterionForJDBCDate("registDate <", value, "registdate");
            return (Criteria) this;
        }

        public Criteria andRegistdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("registDate <=", value, "registdate");
            return (Criteria) this;
        }

        public Criteria andRegistdateIn(List<Date> values) {
            addCriterionForJDBCDate("registDate in", values, "registdate");
            return (Criteria) this;
        }

        public Criteria andRegistdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("registDate not in", values, "registdate");
            return (Criteria) this;
        }

        public Criteria andRegistdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("registDate between", value1, value2, "registdate");
            return (Criteria) this;
        }

        public Criteria andRegistdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("registDate not between", value1, value2, "registdate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table registration_record
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 22 15:20:08 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table registration_record
     *
     * @mbg.generated Mon Jul 22 15:20:08 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}