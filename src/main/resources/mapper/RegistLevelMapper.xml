<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.his.dao.RegistLevelMapper">
  <resultMap id="BaseResultMap" type="com.neu.his.model.RegistLevel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    <id column="registLevelID" jdbcType="BIT" property="registlevelid" />
    <result column="registLevelCode" jdbcType="CHAR" property="registlevelcode" />
    <result column="registLevelName" jdbcType="CHAR" property="registlevelname" />
    <result column="registLevelSeq" jdbcType="CHAR" property="registlevelseq" />
    <result column="registLevelPrice" jdbcType="TINYINT" property="registlevelprice" />
    <result column="registLevelLimit" jdbcType="TINYINT" property="registlevellimit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    registLevelID, registLevelCode, registLevelName, registLevelSeq, registLevelPrice, 
    registLevelLimit
  </sql>
  <select id="selectByExample" parameterType="com.neu.his.model.RegistLevelExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from regist_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Boolean" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    select 
    <include refid="Base_Column_List" />
    from regist_level
    where registLevelID = #{registlevelid,jdbcType=BIT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Boolean">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    delete from regist_level
    where registLevelID = #{registlevelid,jdbcType=BIT}
  </delete>
  <delete id="deleteByExample" parameterType="com.neu.his.model.RegistLevelExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    delete from regist_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neu.his.model.RegistLevel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    insert into regist_level (registLevelID, registLevelCode, registLevelName, 
      registLevelSeq, registLevelPrice, registLevelLimit
      )
    values (#{registlevelid,jdbcType=BIT}, #{registlevelcode,jdbcType=CHAR}, #{registlevelname,jdbcType=CHAR}, 
      #{registlevelseq,jdbcType=CHAR}, #{registlevelprice,jdbcType=TINYINT}, #{registlevellimit,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neu.his.model.RegistLevel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    insert into regist_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="registlevelid != null">
        registLevelID,
      </if>
      <if test="registlevelcode != null">
        registLevelCode,
      </if>
      <if test="registlevelname != null">
        registLevelName,
      </if>
      <if test="registlevelseq != null">
        registLevelSeq,
      </if>
      <if test="registlevelprice != null">
        registLevelPrice,
      </if>
      <if test="registlevellimit != null">
        registLevelLimit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="registlevelid != null">
        #{registlevelid,jdbcType=BIT},
      </if>
      <if test="registlevelcode != null">
        #{registlevelcode,jdbcType=CHAR},
      </if>
      <if test="registlevelname != null">
        #{registlevelname,jdbcType=CHAR},
      </if>
      <if test="registlevelseq != null">
        #{registlevelseq,jdbcType=CHAR},
      </if>
      <if test="registlevelprice != null">
        #{registlevelprice,jdbcType=TINYINT},
      </if>
      <if test="registlevellimit != null">
        #{registlevellimit,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neu.his.model.RegistLevelExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    select count(*) from regist_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    update regist_level
    <set>
      <if test="record.registlevelid != null">
        registLevelID = #{record.registlevelid,jdbcType=BIT},
      </if>
      <if test="record.registlevelcode != null">
        registLevelCode = #{record.registlevelcode,jdbcType=CHAR},
      </if>
      <if test="record.registlevelname != null">
        registLevelName = #{record.registlevelname,jdbcType=CHAR},
      </if>
      <if test="record.registlevelseq != null">
        registLevelSeq = #{record.registlevelseq,jdbcType=CHAR},
      </if>
      <if test="record.registlevelprice != null">
        registLevelPrice = #{record.registlevelprice,jdbcType=TINYINT},
      </if>
      <if test="record.registlevellimit != null">
        registLevelLimit = #{record.registlevellimit,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    update regist_level
    set registLevelID = #{record.registlevelid,jdbcType=BIT},
      registLevelCode = #{record.registlevelcode,jdbcType=CHAR},
      registLevelName = #{record.registlevelname,jdbcType=CHAR},
      registLevelSeq = #{record.registlevelseq,jdbcType=CHAR},
      registLevelPrice = #{record.registlevelprice,jdbcType=TINYINT},
      registLevelLimit = #{record.registlevellimit,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.his.model.RegistLevel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    update regist_level
    <set>
      <if test="registlevelcode != null">
        registLevelCode = #{registlevelcode,jdbcType=CHAR},
      </if>
      <if test="registlevelname != null">
        registLevelName = #{registlevelname,jdbcType=CHAR},
      </if>
      <if test="registlevelseq != null">
        registLevelSeq = #{registlevelseq,jdbcType=CHAR},
      </if>
      <if test="registlevelprice != null">
        registLevelPrice = #{registlevelprice,jdbcType=TINYINT},
      </if>
      <if test="registlevellimit != null">
        registLevelLimit = #{registlevellimit,jdbcType=TINYINT},
      </if>
    </set>
    where registLevelID = #{registlevelid,jdbcType=BIT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.his.model.RegistLevel">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Jul 22 15:20:08 CST 2019.
    -->
    update regist_level
    set registLevelCode = #{registlevelcode,jdbcType=CHAR},
      registLevelName = #{registlevelname,jdbcType=CHAR},
      registLevelSeq = #{registlevelseq,jdbcType=CHAR},
      registLevelPrice = #{registlevelprice,jdbcType=TINYINT},
      registLevelLimit = #{registlevellimit,jdbcType=TINYINT}
    where registLevelID = #{registlevelid,jdbcType=BIT}
  </update>
</mapper>